---

- name: Update the OSP source code
  git:
    repo: '{{ osp_repo }}'
    version: '{{ osp_branch }}'
    dest: '{{ osp_src }}'

- name: Set source code permissions
  file:
    path: '{{ osp_src }}'
    group: '{{ ansible_ssh_user }}'
    owner: '{{ ansible_ssh_user }}'
    recurse: yes

- name: Check if a virtualenv exists
  register: env
  stat:
    path: '{{ osp_src }}/env'

# pyvenv is broken on Ubuntu 14.04.
- name: Create a Python 3 virtualenv, if necessary
  when: env.stat.isdir is not defined
  command: virtualenv --python=/usr/bin/python3.4 env
  args:
    chdir: '{{ osp_src }}'

- name: Update to pip 1.6
  command: env/bin/pip install --upgrade pip
  args:
    chdir: '{{ osp_src }}'

- name: Check for local wheelhouse
  become: no
  local_action: stat path={{ playbook_dir }}/wheelhouse.tar.gz
  register: wh_local

- name: Check for deployed wheelhouse
  register: wh_remote
  stat:
    path: '{{ osp_src }}/wheelhouse'

- name: Deploy the wheelhouse
  when: wh_local.stat.exists and not wh_remote.stat.exists
  unarchive:
    src: '{{ playbook_dir }}/wheelhouse.tar.gz'
    dest: '{{ osp_src }}'

- name: Re-check for deployed wheelhouse
  register: wh_remote
  stat:
    path: '{{ osp_src }}/wheelhouse'

# Install from wheelhouse, when deployed.
- name: Install pip dependencies (from wheelhouse)
  when: wh_remote.stat.exists
  command: env/bin/pip install -r requirements.txt --find-links=wheelhouse
  args:
    chdir: '{{ osp_src }}'

# Otherwise, compile from source.
- name: Install pip dependencies (from source)
  when: not wh_remote.stat.exists
  command: env/bin/pip install -r requirements.txt
  args:
    chdir: '{{ osp_src }}'

- name: Install the CLI suite
  command: env/bin/python3 setup.py develop
  args:
    chdir: '{{ osp_src }}'

- name: Create OSP tables
  when: osp_init_db
  command: env/bin/osp {{ item }} init_db
  with_items: osp_db_modules
  args:
    chdir: '{{ osp_src }}'
